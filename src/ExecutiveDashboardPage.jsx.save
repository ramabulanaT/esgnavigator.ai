import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { BarChart3, Shield, Heart, Leaf, Zap, Building2, ChevronDown, ChevronRight, ExternalLink, CheckCircle, AlertTriangle, Clock } from 'lucide-react';

const ExecutiveDashboardPage = () => {
  const [selectedModule, setSelectedModule] = useState(null);
  const navigate = useNavigate();

  const modules = [
    {
      id: 'financial',
      title: 'Financial Reporting',
      description: 'IFRS S1 & S2 Sustainability Disclosure Standards',
      icon: BarChart3,
      status: 'Active',
      score: 92,
      frameworks: ['IFRS S1', 'IFRS S2', 'TCFD'],
      lastUpdate: '2 days ago',
      details: 'Comprehensive financial sustainability reporting framework covering governance, strategy, risk management, and metrics & targets.'
    },
    {
      id: 'security',
      title: 'Security & Info Security',
      description: 'ISO 27001 Information Security Management',
      icon: Shield,
      status: 'Active',
      score: 88,
      frameworks: ['ISO 27001', 'NIST', 'SOC 2'],
      lastUpdate: '1 day ago',
      details: 'Information security management system ensuring confidentiality, integrity, and availability of information assets.'
    },
    {
      id: 'health',
      title: 'Health & Safety',
      description: 'ISO 45001 Occupational Health & Safety',
      icon: Heart,
      status: 'Review',
      score: 85,
      frameworks: ['ISO 45001', 'OSHA', 'SafeWork'],
      lastUpdate: '5 days ago',
      details: 'Occupational health and safety management system to prevent work-related injuries and ill health.'
    },
    {
      id: 'environmental',
      title: 'Environmental Management',
      description: 'ISO 14001 Environmental Management Systems',
      icon: Leaf,
      status: 'Active',
      score: 90,
      frameworks: ['ISO 14001', 'EMAS', 'EPA'],
      lastUpdate: '3 days ago',
      details: 'Environmental management system to improve environmental performance through efficient use of resources.'
    },
    {
      id: 'energy',
      title: 'Energy Management',
      description: 'ISO 50001 Energy Management Systems',
      icon: Zap,
      status: 'Active',
      score: 87,
      frameworks: ['ISO 50001', 'ASHRAE', 'ENERGY STAR'],
      lastUpdate: '1 day ago',
      details: 'Energy management system to improve energy performance, efficiency, and consumption.'
    },
    {
      id: 'governance',
      title: 'Sustainability & Governance',
      description: 'CDP, GRI, SASB Reporting Standards',
      icon: Building2,
      status: 'Active',
      score: 91,
      frameworks: ['CDP', 'GRI', 'SASB'],
      lastUpdate: '4 days ago',
      details: 'Comprehensive sustainability and governance reporting across environmental, social, and governance dimensions.'
    }
  ];

  const getStatusColor = (status) => {
    switch (status) {
      case 'Active': return 'bg-green-100 text-green-800';
      case 'Review': return 'bg-yellow-100 text-yellow-800';
      case 'Pending': return 'bg-red-100 text-red-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  const getScoreColor = (score) => {
    if (score >= 90) return 'text-green-600';
    if (score >= 80) return 'text-yellow-600';
    return 'text-red-600';
  };

  const overallScore = Math.round(modules.reduce((sum, module) => sum + module.score, 0) / modules.length);

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="bg-white shadow-sm border-b">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center py-6">
            <div>
              <h1 className="text-3xl font-bold text-gray-900">ESG Navigator</h1>
              <p className="text-gray-600">Executive Dashboard</p>
            </div>
            <div className="text-right">
              <div className="text-sm text-gray-500">Overall ESG Score</div>
              <div className={`text-3xl font-bold ${getScoreColor(overallScore)}`}>
                {overallScore}/100
              </div>
            </div>
          </div>
        </div>
      </div>

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {modules.map((module) => {
            const IconComponent = module.icon;
            const isExpanded = selectedModule === module.id;
            
            return (
              <div key={module.id} className="bg-white rounded-lg shadow-sm border hover:shadow-md transition-shadow">
                <div 
                  className="p-6 cursor-pointer"
                  onClick={() => {
                    if (module.id === 'energy') {
                      navigate('/iso50001');
                    } else {
                      setSelectedModule(selectedModule === module.id ? null : module.id);
                    }
                  }}
                >
                  <div className="flex items-start justify-between mb-4">
                    <div className="flex items-center space-x-3">
                      <div className={`p-2 rounded-lg ${module.id === 'financial' ? 'bg-blue-100' : 
                                                        module.id === 'security' ? 'bg-purple-100' :
                                                        module.id === 'health' ? 'bg-red-100' :
                                                        module.id === 'environmental' ? 'bg-green-100' :
                                                        module.id === 'energy' ? 'bg-yellow-100' : 'bg-gray-100'}`}>
                        <IconComponent className={`h-6 w-6 ${module.id === 'financial' ? 'text-blue-600' : 
                                                            module.id === 'security' ? 'text-purple-600' :
                                                            module.id === 'health' ? 'text-red-600' :
                                                            module.id === 'environmental' ? 'text-green-600' :
                                                            module.id === 'energy' ? 'text-yellow-600' : 'text-gray-600'}`} />
                      </div>
                      <div>
                        <h3 className="font-semibold text-gray-900">{module.title}</h3>
                        <p className="text-sm text-gray-500">{module.description}</p>
                      </div>
                    </div>
                    {module.id === 'energy' ? (
                      <ExternalLink className="h-5 w-5 text-gray-400" />
                    ) : (
                      isExpanded ? <ChevronDown className="h-5 w-5 text-gray-400" /> : <ChevronRight className="h-5 w-5 text-gray-400" />
                    )}
                  </div>

                  <div className="flex items-center justify-between">
                    <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(module.status)}`}>
                      {module.status}
                    </span>
                    <div className="flex items-center space-x-2">
                      <span className={`text-lg font-bold ${getScoreColor(module.score)}`}>
                        {module.score}
                      </span>
                      <span className="text-sm text-gray-500">/100</span>
                    </div>
                  </div>

                  <div className="mt-4 flex flex-wrap gap-1">
                    {module.frameworks.map((framework) => (
                      <span key={framework} className="inline-flex items-center px-2 py-1 rounded text-xs bg-gray-100 text-gray-700">
                        {framework}
                      </span>
                    ))}
                  </div>

                  <div className="mt-3 flex items-center text-xs text-gray-500">
                    <Clock className="h-3 w-3 mr-1" />
                    Updated {module.lastUpdate}
                  </div>
                </div>

                {isExpanded && module.id !== 'energy' && (
                  <div className="px-6 pb-6 border-t border-gray-100">
                    <div className="pt-4">
                      <p className="text-sm text-gray-600 mb-4">
                        {module.details}
                      </p>
                      <div className="flex space-x-2">
                        <button className="px-3 py-1.5 text-sm font-medium text-white bg-blue-600 rounded hover:bg-blue-700">
                          Open Module
                        </button>
                        <button className="px-3 py-1.5 text-sm font-medium text-gray-700 bg-gray-100 rounded hover:bg-gray-200">
                          View Reports
                        </button>
                      </div>
                    </div>
                  </div>
                )}
              </div>
            );
          })}
        </div>
      </div>
    </div>
  );
};

export default ExecutiveDashboardPage;
npm install lucide-react

